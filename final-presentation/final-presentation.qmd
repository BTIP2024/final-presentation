---
title: "PGC Internship 2024: R Team - Final Presentation"
author: "[Mentor] Mark Joseph Garrovillas, RCh, Tyrone Mariano, Leda Celeste Samin"
date: last-modified
institution: "Core Facility for Bioinformatics"
format: 
  revealjs:
    date-format: long
    slide-number: c/t
    width: 1920
    height: 1080
    theme: custom.scss
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    preview-links: auto
    slide-level: 3
    multiplex: true
    chalkboard: 
      boardmarker-width: 5
    search:
    transition: slide
    background-transition: fade
    transition-speed: slow
title-slide-attributes:
      data-background: final-presentation_files/img/title-slide.png
      data-background-size: cover
      data-background-color: "#000"
      transition: slide
      background-transition: fade
      transition-speed: slow
---

# INTRODUCTION {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

{{< video dashboard.mp4 >}}

## R is an open, purpose-designed, highly extensible, statistical and data analysis programming language; R enables research reproducibility from its extensive and comprehensive data management capabilities. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

# RESEARCH QUESTIONS {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## R still faces memory and processing limitations that also make computational reproducibility challenging {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## High-dimensional data such as scRNA sequences are ideal to process in cloud-based computing systems with higher computing resources {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We aim to develop and implement the following bioinformatics functions, tools, widgets, or pipelines  {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

- Deploy the Rstudio, Shiny and OpenCPU servers using Docker
- Easy development and access: OpenCPU, Shiny, & RStudio, can be accessed by the user in their browser using Docker
- Application deployment: From git, an isolated and standalone application can be started via Docker
- Expose as a stateless microservice using RESTful API and RPC the major steps in the scRNAseq pipeline and their visualizations 
- Develop an interactive dashboard/reactive framework in Shiny for the scRNA pipeline


# SIGNIFICANCE {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## A separation of concerns paradigm is implemented, making a complex system manageable and efficient to maintain, modify, debug, and develop {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## This research project, with cloud computing, should further promote reproducible research through computational reproducibility by having the datasets easily stored, shared, and analyzed. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

# METHODS {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## The following key developments in scRNAseq processing pipeline were implemented {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## The pre-processing of scRNA sequences pipeline is composed of 8 main steps based on the Seurat R package {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## Dimensional reduction and visualization of scRNAseq data can be done using linear methods such as PCA and non-linear methods such as t-SNE and UMAP {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## Servers {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

- Shiny
    - [description - why/how weâ€™ll use it]
    - Beyond web application creation, Shiny empowers data scientists with interactive tools for exploration, visualization, and communication.
- OpenCPU
    - The OpenCPU system is a server that exposes HTTP api for RPC and data interchange with R for embedded statistical computation (OpenCPU, n.d.).
- Docker
    - The servers can be integrated and accessed via Docker which packages software into standardized units that can be built, tested, and deployed.


# RESULTS {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## We developed scripts for the pre-processing of scRNAseq based on the R Seurat v5 package. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## The packages were uploaded to git in their own separate repository. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We developed a shiny dashboard to run this pipeline interactively. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We developed a shiny dashboard to run this pipeline interactively (more shiny dashboard things) {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

##  We developed a shiny dashboard to run this pipeline interactively (more shiny dashboard things) {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We created dockerfiles to build the image layers and pushed them to Docker hub. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We ran the containers in their respective ports and accessed them via our browsers. {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## Running the pre-processing scRNAseq pipeline via OpenCPU {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## API documentation on how to run the scRNAseq pre-processing pipeline on OpenCPU {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

# SYNTHESIS {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## We were able to deploy  RStudio, Shiny, and OpenCPU servers using Docker {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We exposed a stateless microservice using RESTful API and RPC the major steps of the scRNAseq pipeline {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## We developed an interactive dashboard/reactive framework in Shiny for the scRNAseq pipeline {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

## The project enhanced the reproducibility and efficiency in analyzing large datasets such as scRNA sequences through a robust, web-based pipeline deployment {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

- Developed a reproducible pipeline deployed via github and docker by using web-based servers with enough computing and memory resources to address the limitations of R
- We are able to establish a separation of concerns paradigm by letting the users/clients focus on data analysis and the developers on the front/back end of application development.
- Overall, this promotes reproducible research by enabling computational reproducibility and establishing a virtual commons.


# REFERENCES {data-background="final-presentation_files/img/topic-slide.png" transition="fade-in slide-out" transition-speed="slow"}

## REFERENCES {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}

-   Journal Articles:

    -   <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9148156/>

-   Web Articles:

    -   <https://pmirla.github.io/archive/opencpu/index.html>
    -   \<https://www.bioconductor.org/packages/release/workflows/vignettes/sequencing/inst/doc/sequencing.htm

# THANK YOU! {data-background="final-presentation_files/img/subtopic-slide-2-1.png" transition="fade-in slide-out" transition-speed="slow"}
